{"version":3,"sources":["components/Container/Container.js","components/Feedback/Statistics/Statistic.js","components/Feedback/FeedbackOptions/FeedbackOptions.js","components/Feedback/Section/Section.js","components/Feedback/Notification/Notification.js","components/Feedback/Feedback.js","App.js","index.js","components/Container/Container.module.css","components/Feedback/FeedbackOptions/FeedbackOptions.module.css","components/Feedback/Section/Section.module.css"],"names":["Container","children","className","styles","container","Statistics","good","neutral","bad","total","positivePercentage","FeedbackOptions","onLeaveFeedback","options","map","item","i","type","onClick","button","Section","title","defaultProps","Notification","message","Feedback","state","incrementGood","setState","prevState","incrementNeutral","incrementBad","countTotalFeedback","Object","values","reduce","acc","countPositiveFeedbackPercentage","Math","floor","this","Statistic","Component","App","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"qMAQeA,EAJG,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACnB,OAAO,qBAAKC,UAAWC,IAAOC,UAAvB,SAAmCH,K,6BCkB7BI,EApBI,SAAC,GAAuD,IAArDC,EAAoD,EAApDA,KAAMC,EAA8C,EAA9CA,QAASC,EAAqC,EAArCA,IAAKC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,mBAC/C,OACE,gCACE,uCAAUJ,KACV,0CAAaC,KACb,sCAASC,KACT,wCAAWC,KACX,oDAAuBC,EAAvB,W,gBCiBSC,EAtBS,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,gBAAiBC,EAAc,EAAdA,QAC1C,OACE,mCACGA,EAAQC,KAAI,SAACC,EAAMC,GAAP,OACX,wBACEC,KAAK,SACLC,QAASN,EAAgBI,GACzBd,UAAWC,IAAOgB,OAHpB,SAMGJ,GAFIA,S,gBCTTK,EAAU,SAAC,GAAyB,IAAvBnB,EAAsB,EAAtBA,SAAUoB,EAAY,EAAZA,MAC3B,OACE,gCACE,mBAAGnB,UAAWC,IAAOkB,MAArB,SAA6BA,IAC5BpB,MAKPmB,EAAQE,aAAe,CACrBD,MAAO,IAGMD,QCfTG,EAAe,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtB,OAAO,4BAAIA,KAGbD,EAAaD,aAAe,CAC1BE,QAAS,KAGID,QCiEAE,E,4MApEbC,MAAQ,CACNpB,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPmB,cAAgB,WACd,EAAKC,UAAS,SAACC,GACb,MAAO,CAAEvB,KAAMuB,EAAUvB,KAAO,O,EAGpCwB,iBAAmB,WACjB,EAAKF,UAAS,SAACC,GACb,MAAO,CAAEtB,QAASsB,EAAUtB,QAAU,O,EAG1CwB,aAAe,WACb,EAAKH,UAAS,SAACC,GACb,MAAO,CAAErB,IAAKqB,EAAUrB,IAAM,O,EAIlCwB,mBAAqB,WAGnB,OAFYC,OAAOC,OAAO,EAAKR,OAAOS,QAAO,SAACC,EAAKpB,GAAN,OAAYoB,EAAMpB,M,EAKjEqB,gCAAkC,WAKhC,OAJoBC,KAAKC,MACtB,EAAKb,MAAMpB,KAAO,EAAK0B,qBAAwB,M,4CAMpD,WAAU,IAAD,EACwBQ,KAAKd,MAA5BpB,EADD,EACCA,KAAMC,EADP,EACOA,QAASC,EADhB,EACgBA,IACvB,OACE,gCACE,cAAC,EAAD,CAASa,MAAM,wBAAf,SACE,cAAC,EAAD,CACER,QAAS,CAAC,OAAQ,UAAW,OAC7BD,gBAAiB,CACf4B,KAAKb,cACLa,KAAKV,iBACLU,KAAKT,kBAIX,cAAC,EAAD,CAASV,MAAM,aAAf,SACGmB,KAAKR,qBACJ,cAACS,EAAD,CACEnC,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAO+B,KAAKR,qBACZtB,mBAAoB8B,KAAKH,oCAG3B,cAAC,EAAD,CAAcb,QAAQ,+B,GA7DXkB,aCMRC,EARH,WACV,OACE,cAAC,EAAD,UACE,cAAC,EAAD,O,MCFNC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U,kBCR1BC,EAAOC,QAAU,CAAC,UAAY,+B,kBCA9BD,EAAOC,QAAU,CAAC,OAAS,kC,kBCA3BD,EAAOC,QAAU,CAAC,MAAQ,0B","file":"static/js/main.40d3f77a.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Container.module.css';\r\nimport styles from './Container.module.css';\r\n\r\nconst Container = ({ children }) => {\r\n  return <div className={styles.container}>{children}</div>;\r\n};\r\n\r\nexport default Container;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => {\r\n  return (\r\n    <div>\r\n      <p>Good: {good}</p>\r\n      <p>Neutral: {neutral}</p>\r\n      <p>Bad: {bad}</p>\r\n      <p>Total: {total}</p>\r\n      <p>Positive feedback: {positivePercentage}%</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nStatistics.propTypes = {\r\n  good: PropTypes.number.isRequired,\r\n  neutral: PropTypes.number.isRequired,\r\n  bad: PropTypes.number.isRequired,\r\n  total: PropTypes.number.isRequired,\r\n  positivePercentage: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default Statistics;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport styles from \"./FeedbackOptions.module.css\";\r\n\r\nconst FeedbackOptions = ({ onLeaveFeedback, options }) => {\r\n  return (\r\n    <>\r\n      {options.map((item, i) => (\r\n        <button\r\n          type=\"button\"\r\n          onClick={onLeaveFeedback[i]}\r\n          className={styles.button}\r\n          key={item}\r\n        >\r\n          {item}\r\n        </button>\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\nFeedbackOptions.propTypes = {\r\n  onLeaveFeedback: PropTypes.arrayOf(PropTypes.func.isRequired),\r\n  options: PropTypes.arrayOf(PropTypes.string.isRequired),\r\n};\r\n\r\nexport default FeedbackOptions;\r\n","import React from \"react\";\r\n\r\nimport styles from \"./Section.module.css\";\r\n\r\nconst Section = ({ children, title }) => {\r\n  return (\r\n    <div>\r\n      <p className={styles.title}>{title}</p>\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\n\r\nSection.defaultProps = {\r\n  title: \"\",\r\n};\r\n\r\nexport default Section;\r\n","import React from \"react\";\r\n\r\nconst Notification = ({ message }) => {\r\n  return <p>{message}</p>;\r\n};\r\n\r\nNotification.defaultProps = {\r\n  message: \" \",\r\n};\r\n\r\nexport default Notification;\r\n","import React, { Component } from \"react\";\r\nimport Statistics from \"./Statistics\";\r\nimport FeedbackOptions from \"./FeedbackOptions\";\r\nimport Section from \"./Section\";\r\nimport Notification from \"./Notification\";\r\n\r\nclass Feedback extends Component {\r\n  state = {\r\n    good: 0,\r\n    neutral: 0,\r\n    bad: 0,\r\n  };\r\n\r\n  incrementGood = () => {\r\n    this.setState((prevState) => {\r\n      return { good: prevState.good + 1 };\r\n    });\r\n  };\r\n  incrementNeutral = () => {\r\n    this.setState((prevState) => {\r\n      return { neutral: prevState.neutral + 1 };\r\n    });\r\n  };\r\n  incrementBad = () => {\r\n    this.setState((prevState) => {\r\n      return { bad: prevState.bad + 1 };\r\n    });\r\n  };\r\n\r\n  countTotalFeedback = () => {\r\n    let total = Object.values(this.state).reduce((acc, i) => acc + i);\r\n\r\n    return total;\r\n  };\r\n\r\n  countPositiveFeedbackPercentage = () => {\r\n    let countPositive = Math.floor(\r\n      (this.state.good / this.countTotalFeedback()) * 100\r\n    );\r\n\r\n    return countPositive;\r\n  };\r\n\r\n  render() {\r\n    const { good, neutral, bad } = this.state;\r\n    return (\r\n      <div>\r\n        <Section title=\"Please leave Feedback\">\r\n          <FeedbackOptions\r\n            options={[\"Good\", \"Neutral\", \"Bad\"]}\r\n            onLeaveFeedback={[\r\n              this.incrementGood,\r\n              this.incrementNeutral,\r\n              this.incrementBad,\r\n            ]}\r\n          />\r\n        </Section>\r\n        <Section title=\"Statistics\">\r\n          {this.countTotalFeedback() ? (\r\n            <Statistics\r\n              good={good}\r\n              neutral={neutral}\r\n              bad={bad}\r\n              total={this.countTotalFeedback()}\r\n              positivePercentage={this.countPositiveFeedbackPercentage()}\r\n            />\r\n          ) : (\r\n            <Notification message=\"No feedback given\" />\r\n          )}\r\n        </Section>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Feedback;\r\n","import React from \"react\";\nimport Container from \"./components/Container/Container\";\nimport Feedback from \"./components/Feedback\";\n\nconst App = () => {\n  return (\n    <Container>\n      <Feedback />\n    </Container>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"modern-normalize/modern-normalize.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__399BP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"FeedbackOptions_button__1TaTK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Section_title__3IHh0\"};"],"sourceRoot":""}